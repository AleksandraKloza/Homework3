#Loading "tidyverse" to make R easier
library(tidyverse)
#Set options on scientific notation and the number of digits printed
options(scipen = 5, digits = 3)
#Running the weekly helper to have p_values later in the homework
get_p_value <- function(m) {
p <- summary(m)$coefficients[2,4]
return(p)
}
#Loading "tidyverse" to make R easier
library(tidyverse)
#Set options on scientific notation and the number of digits printed
options(scipen = 5, digits = 3)
#Running the weekly helper to have p_values later in the homework
get_p_value <- function(m) {
p <- summary(m)$coefficients[2,4]
return(p)
}
#Loading "tidyverse" to make R easier
library(tidyverse)
#Set options on scientific notation and the number of digits printed
options(scipen = 5, digits = 3)
#Running the weekly helper to have p_values later in the homework
get_p_value <- function(m) {
p <- summary(m)$coefficients[2,4]
return(p)
}
#Reading the data
read_csv("stroop_standing_data.csv")
view(stroop_standing_data.cvs)
view("stroop_standing_data")
view("stroop_standing_data.cvs")
show("stroop_standing_data.cvs")
#Loading in the Excel data
stroop_data <- read_csv("stroop_standing_data.csv")
view("stroop_standing_data.cvs")
view(stroop_data)
#Filtering the data to get rid of missing values
nrow(stroop_data)
nox11 <- drop_na(stroop_data)
nrow(nox11)
#Filtering the data to get rid of missing values
nrow(stroop_data) #32121
filter(stroop_data, X11 = "NA")
filter(stroop_data, X11 = NA)
nrow(stroop_data)
view(stroop_data)
stroop_data <- select(stroop_data, -X11)
nrow(stroop_data)
view(stroop_data)
view(stroop_data)
#Changing the reaction time to a numeric variable
stroop_data <- mutate(stroop_data, rt = as.numeric(rt))
stroop_data <- filter(stroop, rt > 0)
stroop_data <- filter(stroop_data, rt > 0)
#Getting rid of the practice values
stroop_data <- filter(stroop_data, phase != "practice")
#Getting rid of the mistrials
stroop_data <- filter(stroop_data, correct = 999)
#Getting rid of the mistrials
stroop_data <- filter(stroop_data, correct = "999")
#Getting rid of the mistrials
stroop_data <- filter(stroop_data, correct < 2)
#It's a linear model because it's a relationship between "position" (standing or sitting down) and reaction time
stroop_model <- lm(rt~phase, stroop_data)
summary(stroop_model)
#It's a linear model because it's a relationship between "position" (standing or sitting down) and reaction time
stroop_model <- lm(rt~condition, stroop_data)
summary(stroop_model)
#Plotting the model
ggplot(stroop_model, aes(rt, condition))
#Plotting the model
ggplot(stroop_model, aes(x = condition, y = rt))
#Plotting the model
ggplot(stroop_model, aes(x = condition, y = rt)) + geom_point()
source('C:/Users/Ola/Desktop/PS947 Advanced Statistics for Research/Homeworks/HW3/Homework3/nr reg 2003808 homework3.R', echo=TRUE)
#Plotting the model
ggplot(stroop_model, aes(x = rt, y = condition) + geom_point()
#Plotting the model
ggplot(stroop_model, aes(x = rt, y = condition))+ geom_point()
#Plotting the model
ggplot(stroop_model, aes(x = condition, y = rt)) +
geom_point()
#Plotting the model
ggplot(stroop_model, aes(x = condition, y = rt)) +
geom_boxplot()
#Plotting the model
ggplot(stroop_model, aes(x = condition, y = rt)) +
geom_contour()
#Plotting the model
ggplot(stroop_model, aes(x = condition, y = rt)) +
geom_dotplot()
#Plotting the model
boxplot(condition~rt, stroop_model)
#Plotting the model
ggplot(stroop_model, aes(condition, rt)) + geom_boxplot()
#Loading in the Excel data
spotify_data <- read.csv("spotify_cleaned.csv")
view(spotify_data)
